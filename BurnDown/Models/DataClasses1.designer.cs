#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BurnDown
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "bdownDB")]
    public partial class DB : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void Insertproject(BurnDown.Models.project instance);
        partial void Updateproject(BurnDown.Models.project instance);
        partial void Deleteproject(BurnDown.Models.project instance);
        partial void Insertdevloper(BurnDown.Models.devloper instance);
        partial void Updatedevloper(BurnDown.Models.devloper instance);
        partial void Deletedevloper(BurnDown.Models.devloper instance);
        partial void Inserttask(BurnDown.Models.task instance);
        partial void Updatetask(BurnDown.Models.task instance);
        partial void Deletetask(BurnDown.Models.task instance);
        #endregion

        public DB() :
            base(global::System.Configuration.ConfigurationManager.ConnectionStrings["bdownDBConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }

        public DB(string connection) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public DB(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public DB(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public DB(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<BurnDown.Models.project> projects
        {
            get
            {
                return this.GetTable<BurnDown.Models.project>();
            }
        }

        public System.Data.Linq.Table<BurnDown.Models.vProject> vProjects
        {
            get
            {
                return this.GetTable<BurnDown.Models.vProject>();
            }
        }

        public System.Data.Linq.Table<BurnDown.Models.devloper> devlopers
        {
            get
            {
                return this.GetTable<BurnDown.Models.devloper>();
            }
        }

        public System.Data.Linq.Table<BurnDown.Models.vTask> vTasks
        {
            get
            {
                return this.GetTable<BurnDown.Models.vTask>();
            }
        }

        public System.Data.Linq.Table<BurnDown.Models.task> tasks
        {
            get
            {
                return this.GetTable<BurnDown.Models.task>();
            }
        }
        public System.Data.Linq.Table<BurnDown.Models.subTask> subTasks
        {
            get
            {
                return this.GetTable<BurnDown.Models.subTask>();
            }
        }
    }
}
namespace BurnDown.Models
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.ComponentModel;
    using System;
    using System.Linq;
    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.subTasks")]
    public partial class subTask : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _subTaskId;

        private string _subTaskName;

        private bool _completed;

        private int _parentTask;

        private string _notes;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnsubTaskIdChanging(int value);
        partial void OnsubTaskIdChanged();
        partial void OnsubTaskNameChanging(string value);
        partial void OnsubTaskNameChanged();
        partial void OncompletedChanging(bool value);
        partial void OncompletedChanged();
        partial void OnparentTaskChanging(int value);
        partial void OnparentTaskChanged();
        partial void OnnotesChanging(string value);
        partial void OnnotesChanged();
        #endregion

        public subTask()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_subTaskId", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int subTaskId
        {
            get
            {
                return this._subTaskId;
            }
            set
            {
                if ((this._subTaskId != value))
                {
                    this.OnsubTaskIdChanging(value);
                    this.SendPropertyChanging();
                    this._subTaskId = value;
                    this.SendPropertyChanged("subTaskId");
                    this.OnsubTaskIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_notes", DbType = "NChar(2000)")]
        public string notes
        {
            get
            {
                return this._notes;
            }
            set
            {
                if ((this._notes != value))
                {
                    this.OnnotesChanging(value);
                    this.SendPropertyChanging();
                    this._notes = value;
                    this.SendPropertyChanged("notes");
                    this.OnnotesChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_subTaskName", DbType = "NChar(50) NOT NULL", CanBeNull = false)]
        public string subTaskName
        {
            get
            {
                return this._subTaskName;
            }
            set
            {
                if ((this._subTaskName != value))
                {
                    this.OnsubTaskNameChanging(value);
                    this.SendPropertyChanging();
                    this._subTaskName = value;
                    this.SendPropertyChanged("subTaskName");
                    this.OnsubTaskNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_completed", DbType = "Bit NOT NULL")]
        public bool completed
        {
            get
            {
                return this._completed;
            }
            set
            {
                if ((this._completed != value))
                {
                    this.OncompletedChanging(value);
                    this.SendPropertyChanging();
                    this._completed = value;
                    this.SendPropertyChanged("completed");
                    this.OncompletedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_parentTask", DbType = "Int NOT NULL")]
        public int parentTask
        {
            get
            {
                return this._parentTask;
            }
            set
            {
                if ((this._parentTask != value))
                {
                    this.OnparentTaskChanging(value);
                    this.SendPropertyChanging();
                    this._parentTask = value;
                    this.SendPropertyChanged("parentTask");
                    this.OnparentTaskChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }


    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.projects")]
    public partial class project : INotifyPropertyChanging, INotifyPropertyChanged, IChartable
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _projectId;

        private string _projectName;

        private int _leadDeveloper;

        private int _priority;

        private int _percentCompleted;

        private int _status;

        private System.Nullable<int> _developerAvailabilityPerDay;


        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnprojectIdChanging(int value);
        partial void OnprojectIdChanged();
        partial void OnprojectNameChanging(string value);
        partial void OnprojectNameChanged();
        partial void OnleadDeveloperChanging(int value);
        partial void OnleadDeveloperChanged();
        partial void OnpriorityChanging(int value);
        partial void OnpriorityChanged();
        #endregion

        public project()
        {

            OnCreated();
        }


        public int percentCompleted
        {
            get
            {
                return _percentCompleted;
            }
            set
            {
                _percentCompleted = value;
            }
        }

        public int status
        {
            get
            {
                return _status;
            }
            set
            {
                _status = value;
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_projectId", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int projectId
        {
            get
            {
                return this._projectId;
            }
            set
            {
                if ((this._projectId != value))
                {
                    this.OnprojectIdChanging(value);
                    this.SendPropertyChanging();
                    this._projectId = value;
                    this.SendPropertyChanged("projectId");
                    this.OnprojectIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_projectName", DbType = "NChar(50) NOT NULL", CanBeNull = false)]
        public string projectName
        {
            get
            {
                return this._projectName;
            }
            set
            {
                if ((this._projectName != value))
                {
                    this.OnprojectNameChanging(value);
                    this.SendPropertyChanging();
                    this._projectName = value;
                    this.SendPropertyChanged("projectName");
                    this.OnprojectNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_leadDeveloper", DbType = "Int NOT NULL")]
        public int leadDeveloper
        {
            get
            {
                return this._leadDeveloper;
            }
            set
            {
                if ((this._leadDeveloper != value))
                {
                    this.OnleadDeveloperChanging(value);
                    this.SendPropertyChanging();
                    this._leadDeveloper = value;
                    this.SendPropertyChanged("leadDeveloper");
                    this.OnleadDeveloperChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_priority", DbType = "Int NOT NULL")]
        public int priority
        {
            get
            {
                return this._priority;
            }
            set
            {
                if ((this._priority != value))
                {
                    this.OnpriorityChanging(value);
                    this.SendPropertyChanging();
                    this._priority = value;
                    this.SendPropertyChanged("priority");
                    this.OnpriorityChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }

        public int id
        {
            get
            {
                return projectId;
            }
            set
            {
                throw new NotImplementedException();
            }
        }

        public string type
        {
            get
            {
                return "Projects";
            }
            set
            {
                throw new NotImplementedException();
            }
        }


        public int? developerAvailabilityPerDay
        {
            get
            {
                return _developerAvailabilityPerDay;
            }
            set
            {
                _developerAvailabilityPerDay = value;
            }
        }

        public int originalEstimatedHours
        {
            get
            {
                throw new NotImplementedException();
            }
            set
            {
                throw new NotImplementedException();
            }
        }

        public int hoursSpentOnItem
        {
            get
            {
                throw new NotImplementedException();
            }
            set
            {
                throw new NotImplementedException();
            }
        }

        public int parent
        {
            get
            {
                throw new NotImplementedException();
            }
            set
            {
                throw new NotImplementedException();
            }
        }

        public string itemName
        {
            get
            {
                throw new NotImplementedException();
            }
            set
            {
                throw new NotImplementedException();
            }
        }

        public string parentName
        {
            get
            {
                throw new NotImplementedException();
            }
            set
            {
                throw new NotImplementedException();
            }
        }

        public int? hoursForItemsWithHigherPriority
        {
            get
            {
                throw new NotImplementedException();
            }
            set
            {
                throw new NotImplementedException();
            }
        }

        public DateTime startDate
        {
            get
            {
                throw new NotImplementedException();
            }
            set
            {
                throw new NotImplementedException();
            }
        }

        public DateTime dueDate
        {
            get
            {
                throw new NotImplementedException();
            }
            set
            {
                throw new NotImplementedException();
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.vProjects")]
    public partial class vProject
    {

        private int _projectId;

        private string _projectName;

        private int _developerId;

        private string _Developer_Name;

        private int _priority;

        public vProject()
        {
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_projectId", DbType = "Int NOT NULL")]
        public int projectId
        {
            get
            {
                return this._projectId;
            }
            set
            {
                if ((this._projectId != value))
                {
                    this._projectId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_projectName", DbType = "NChar(50) NOT NULL", CanBeNull = false)]
        public string projectName
        {
            get
            {
                return this._projectName;
            }
            set
            {
                if ((this._projectName != value))
                {
                    this._projectName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_developerId", DbType = "Int NOT NULL")]
        public int developerId
        {
            get
            {
                return this._developerId;
            }
            set
            {
                if ((this._developerId != value))
                {
                    this._developerId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Name = "[Developer Name]", Storage = "_Developer_Name", DbType = "NChar(40)")]
        public string Developer_Name
        {
            get
            {
                return this._Developer_Name;
            }
            set
            {
                if ((this._Developer_Name != value))
                {
                    this._Developer_Name = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_priority", DbType = "Int NOT NULL")]
        public int priority
        {
            get
            {
                return this._priority;
            }
            set
            {
                if ((this._priority != value))
                {
                    this._priority = value;
                }
            }
        }





    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.devlopers")]
    public partial class devloper : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _developerId;

        private string _firstName;

        private string _lastName;

        private string _email;

        private string _phone;

        private System.Nullable<int> _hoursPerDayAvailable;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OndeveloperIdChanging(int value);
        partial void OndeveloperIdChanged();
        partial void OnfirstNameChanging(string value);
        partial void OnfirstNameChanged();
        partial void OnlastNameChanging(string value);
        partial void OnlastNameChanged();
        partial void OnemailChanging(string value);
        partial void OnemailChanged();
        partial void OnphoneChanging(string value);
        partial void OnphoneChanged();
        partial void OnhoursPerDayAvailableChanging(System.Nullable<int> value);
        partial void OnhoursPerDayAvailableChanged();
        #endregion

        public devloper()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_developerId", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int developerId
        {
            get
            {
                return this._developerId;
            }
            set
            {
                if ((this._developerId != value))
                {
                    this.OndeveloperIdChanging(value);
                    this.SendPropertyChanging();
                    this._developerId = value;
                    this.SendPropertyChanged("developerId");
                    this.OndeveloperIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_firstName", DbType = "NChar(20) NOT NULL", CanBeNull = false)]
        public string firstName
        {
            get
            {
                return this._firstName;
            }
            set
            {
                if ((this._firstName != value))
                {
                    this.OnfirstNameChanging(value);
                    this.SendPropertyChanging();
                    this._firstName = value;
                    this.SendPropertyChanged("firstName");
                    this.OnfirstNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_lastName", DbType = "NChar(20)")]
        public string lastName
        {
            get
            {
                return this._lastName;
            }
            set
            {
                if ((this._lastName != value))
                {
                    this.OnlastNameChanging(value);
                    this.SendPropertyChanging();
                    this._lastName = value;
                    this.SendPropertyChanged("lastName");
                    this.OnlastNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_email", DbType = "NChar(30)")]
        public string email
        {
            get
            {
                return this._email;
            }
            set
            {
                if ((this._email != value))
                {
                    this.OnemailChanging(value);
                    this.SendPropertyChanging();
                    this._email = value;
                    this.SendPropertyChanged("email");
                    this.OnemailChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_phone", DbType = "NChar(12)")]
        public string phone
        {
            get
            {
                return this._phone;
            }
            set
            {
                if ((this._phone != value))
                {
                    this.OnphoneChanging(value);
                    this.SendPropertyChanging();
                    this._phone = value;
                    this.SendPropertyChanged("phone");
                    this.OnphoneChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hoursPerDayAvailable", DbType = "Int")]
        public System.Nullable<int> hoursPerDayAvailable
        {
            get
            {
                return this._hoursPerDayAvailable;
            }
            set
            {
                if ((this._hoursPerDayAvailable != value))
                {
                    this.OnhoursPerDayAvailableChanging(value);
                    this.SendPropertyChanging();
                    this._hoursPerDayAvailable = value;
                    this.SendPropertyChanged("hoursPerDayAvailable");
                    this.OnhoursPerDayAvailableChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.vTasks")]
    public partial class vTask : IChartable
    {

        private int _taskId;

        private int _assignedTo;

        private int _originalEstimatedHours;

        private int _hoursSpentOnTask;

        private int _project;

        private int _shareOfProject;

        private int _percentCompleted;

        private int _priority;

        private string _taskName;

        private System.DateTime _startDate;

        private System.DateTime _dueDate;

        private System.Nullable<int> _hoursForTasksWithHigherPriority;

        private string _projectName;

        private int _developerId;

        private string _firstName;

        private string _lastName;

        private int _projectId;

        private int _id;

        private string _type;

        private System.Nullable<int> _developerAvailabilityPerDay;

        public vTask()
        {
            _id = _projectId;
            _type = "Task";
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_taskId", DbType = "Int")]
        public int taskId
        {
            get
            {
                return this._taskId;
            }
            set
            {
                if ((this._taskId != value))
                {
                    this._taskId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_assignedTo", DbType = "Int")]
        public int assignedTo
        {
            get
            {
                return this._assignedTo;
            }
            set
            {
                if ((this._assignedTo != value))
                {
                    this._assignedTo = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_originalEstimatedHours", DbType = "Int")]
        public int originalEstimatedHours
        {
            get
            {
                return this._originalEstimatedHours;
            }
            set
            {
                if ((this._originalEstimatedHours != value))
                {
                    this._originalEstimatedHours = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hoursSpentOnTask", DbType = "Int")]
        public int hoursSpentOnTask
        {
            get
            {
                return this._hoursSpentOnTask;
            }
            set
            {
                if ((this._hoursSpentOnTask != value))
                {
                    this._hoursSpentOnTask = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_project", DbType = "Int")]
        public int project
        {
            get
            {
                return this._project;
            }
            set
            {
                if ((this._project != value))
                {
                    this._project = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_shareOfProject", DbType = "Int")]
        public int shareOfProject
        {
            get
            {
                return this._shareOfProject;
            }
            set
            {
                if ((this._shareOfProject != value))
                {
                    this._shareOfProject = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_percentCompleted", DbType = "Int")]
        public int percentCompleted
        {
            get
            {
                return this._percentCompleted;
            }
            set
            {
                if ((this._percentCompleted != value))
                {
                    this._percentCompleted = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_priority", DbType = "Int")]
        public int priority
        {
            get
            {
                return this._priority;
            }
            set
            {
                if ((this._priority != value))
                {
                    this._priority = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_taskName", DbType = "NChar(50)", CanBeNull = false)]
        public string taskName
        {
            get
            {
                return this._taskName;
            }
            set
            {
                if ((this._taskName != value))
                {
                    this._taskName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_startDate", DbType = "DateTime")]
        public System.DateTime startDate
        {
            get
            {
                return this._startDate;
            }
            set
            {
                if ((this._startDate != value))
                {
                    this._startDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_dueDate", DbType = "DateTime")]
        public System.DateTime dueDate
        {
            get
            {
                return this._dueDate;
            }
            set
            {
                if ((this._dueDate != value))
                {
                    this._dueDate = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hoursForTasksWithHigherPriority", DbType = "Int")]
        public System.Nullable<int> hoursForTasksWithHigherPriority
        {
            get
            {
                return this._hoursForTasksWithHigherPriority;
            }
            set
            {
                if ((this._hoursForTasksWithHigherPriority != value))
                {
                    this._hoursForTasksWithHigherPriority = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_projectName", DbType = "NChar(50) NOT NULL")]
        public string projectName
        {
            get
            {
                return this._projectName;
            }
            set
            {
                if ((this._projectName != value))
                {
                    this._projectName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_developerId", DbType = "Int")]
        public int developerId
        {
            get
            {
                return this._developerId;
            }
            set
            {
                if ((this._developerId != value))
                {
                    this._developerId = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_firstName", DbType = "NChar(20)")]
        public string firstName
        {
            get
            {
                return this._firstName;
            }
            set
            {
                if ((this._firstName != value))
                {
                    this._firstName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_lastName", DbType = "NChar(20)")]
        public string lastName
        {
            get
            {
                return this._lastName;
            }
            set
            {
                if ((this._lastName != value))
                {
                    this._lastName = value;
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_projectId", DbType = "Int NOT NULL")]
        public int projectId
        {
            get
            {
                return this._projectId;
            }
            set
            {
                if ((this._projectId != value))
                {
                    this._projectId = value;
                }
            }
        }


        public int id
        {
            get
            {
                return taskId;
            }
            set
            {
                throw new NotImplementedException();
            }
        }

        public string type
        {
            get
            {
                return _type;
            }
            set
            {
                throw new NotImplementedException();
            }
        }


        public System.Nullable<int> developerAvailabilityPerDay
        {
            get
            {
                return _developerAvailabilityPerDay;
            }
            set
            {
                BurnDown.DB db = new DB();

                var dev = db.devlopers;

                System.Nullable<int> available =
                    (from d in dev
                     where d.developerId == this._developerId
                     select d.hoursPerDayAvailable).SingleOrDefault();
                _developerAvailabilityPerDay = available;
            }
        }

        public int hoursSpentOnItem
        {
            get
            {
                return _hoursSpentOnTask;
            }
            set
            {
                throw new NotImplementedException();
            }
        }

        public int parent
        {
            get
            {
                throw new NotImplementedException();
            }
            set
            {
                throw new NotImplementedException();
            }
        }

        public string itemName
        {
            get
            {
                throw new NotImplementedException();
            }
            set
            {
                throw new NotImplementedException();
            }
        }

        public string parentName
        {
            get
            {
                throw new NotImplementedException();
            }
            set
            {
                throw new NotImplementedException();
            }
        }

        public int? hoursForItemsWithHigherPriority
        {
            get
            {
                throw new NotImplementedException();
            }
            set
            {
                throw new NotImplementedException();
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.tasks")]
    public partial class task : INotifyPropertyChanging, IChartable, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _taskId;

        private int _assignedTo;

        private int _originalEstimatedHours;

        private int _hoursSpentOnTask;

        private int _project;

        private int _shareOfProject;

        private int _percentCompleted;

        private int _priority;

        private string _taskName;

        private System.DateTime _startDate;

        private System.DateTime _dueDate;

        private System.Nullable<int> _hoursForTasksWithHigherPriority;

        private string _notes;

        private int? _developerAvailabilityPerDay;

        private string _projectName;

        private int? _hoursForItemsWithHigherPriority;

        private string _developerName;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OntaskIdChanging(int value);
        partial void OntaskIdChanged();
        partial void OnassignedToChanging(int value);
        partial void OnassignedToChanged();
        partial void OnoriginalEstimatedHoursChanging(int value);
        partial void OnoriginalEstimatedHoursChanged();
        partial void OnhoursSpentOnTaskChanging(int value);
        partial void OnhoursSpentOnTaskChanged();
        partial void OnprojectChanging(int value);
        partial void OnprojectChanged();
        partial void OnshareOfProjectChanging(int value);
        partial void OnshareOfProjectChanged();
        partial void OnpercentCompletedChanging(int value);
        partial void OnpercentCompletedChanged();
        partial void OnpriorityChanging(int value);
        partial void OnpriorityChanged();
        partial void OntaskNameChanging(string value);
        partial void OntaskNameChanged();
        partial void OnstartDateChanging(System.DateTime value);
        partial void OnstartDateChanged();
        partial void OndueDateChanging(System.DateTime value);
        partial void OndueDateChanged();
        partial void OnhoursForTasksWithHigherPriorityChanging(System.Nullable<int> value);
        partial void OnhoursForTasksWithHigherPriorityChanged();
        partial void OnnotesChanging(string value);
        partial void OnnotesChanged();
        #endregion

        public task()
        {
            OnCreated();





        }

        public string developerName
        {
            get
            {
                DB db = new DB();

                devloper dev =
                    (from d in db.devlopers
                     where d.developerId == this._assignedTo
                     select d).SingleOrDefault();
                return dev.firstName.Trim() + " " + dev.lastName.Trim();

            }
            set
            {

            }
        }


        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_notes", DbType = "NChar(2000)")]
        public string notes
        {
            get
            {
                return this._notes;
            }
            set
            {
                if ((this._notes != value))
                {
                    this.OnnotesChanging(value);
                    this.SendPropertyChanging();
                    this._notes = value;
                    this.SendPropertyChanged("notes");
                    this.OnnotesChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_taskId", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
        public int taskId
        {
            get
            {
                return this._taskId;
            }
            set
            {
                if ((this._taskId != value))
                {
                    this.OntaskIdChanging(value);
                    this.SendPropertyChanging();
                    this._taskId = value;
                    this.SendPropertyChanged("taskId");
                    this.OntaskIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_assignedTo", DbType = "Int NOT NULL")]
        public int assignedTo
        {
            get
            {
                return this._assignedTo;
            }
            set
            {
                if ((this._assignedTo != value))
                {
                    this.OnassignedToChanging(value);
                    this.SendPropertyChanging();
                    this._assignedTo = value;
                    this.SendPropertyChanged("assignedTo");
                    this.OnassignedToChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_originalEstimatedHours", DbType = "Int NOT NULL")]
        public int originalEstimatedHours
        {
            get
            {
                return this._originalEstimatedHours;
            }
            set
            {
                if ((this._originalEstimatedHours != value))
                {
                    this.OnoriginalEstimatedHoursChanging(value);
                    this.SendPropertyChanging();
                    this._originalEstimatedHours = value;
                    this.SendPropertyChanged("originalEstimatedHours");
                    this.OnoriginalEstimatedHoursChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hoursSpentOnTask", DbType = "Int NOT NULL")]
        public int hoursSpentOnTask
        {
            get
            {
                return this._hoursSpentOnTask;
            }
            set
            {
                if ((this._hoursSpentOnTask != value))
                {
                    this.OnhoursSpentOnTaskChanging(value);
                    this.SendPropertyChanging();
                    this._hoursSpentOnTask = value;
                    this.SendPropertyChanged("hoursSpentOnTask");
                    this.OnhoursSpentOnTaskChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_project", DbType = "Int NOT NULL")]
        public int project
        {
            get
            {
                return this._project;
            }
            set
            {
                if ((this._project != value))
                {
                    this.OnprojectChanging(value);
                    this.SendPropertyChanging();
                    this._project = value;
                    this.SendPropertyChanged("project");
                    this.OnprojectChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_shareOfProject", DbType = "Int")]
        public int shareOfProject
        {
            get
            {
                return this._shareOfProject;
            }
            set
            {
                if ((this._shareOfProject != value))
                {
                    this.OnshareOfProjectChanging(value);
                    this.SendPropertyChanging();
                    this._shareOfProject = value;
                    this.SendPropertyChanged("shareOfProject");
                    this.OnshareOfProjectChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_percentCompleted", DbType = "Int")]
        public int percentCompleted
        {
            get
            {
                return this._percentCompleted;
            }
            set
            {
                if ((this._percentCompleted != value))
                {
                    this.OnpercentCompletedChanging(value);
                    this.SendPropertyChanging();
                    this._percentCompleted = value;
                    this.SendPropertyChanged("percentCompleted");
                    this.OnpercentCompletedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_priority", DbType = "Int NOT NULL")]
        public int priority
        {
            get
            {
                return this._priority;
            }
            set
            {
                if ((this._priority != value))
                {
                    this.OnpriorityChanging(value);
                    this.SendPropertyChanging();
                    this._priority = value;
                    this.SendPropertyChanged("priority");
                    this.OnpriorityChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_taskName", DbType = "NChar(50) NOT NULL", CanBeNull = false)]
        public string taskName
        {
            get
            {
                return this._taskName;
            }
            set
            {
                if ((this._taskName != value))
                {
                    this.OntaskNameChanging(value);
                    this.SendPropertyChanging();
                    this._taskName = value;
                    this.SendPropertyChanged("taskName");
                    this.OntaskNameChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_startDate", DbType = "DateTime NOT NULL")]
        public System.DateTime startDate
        {
            get
            {
                return this._startDate;
            }
            set
            {
                if ((this._startDate != value))
                {
                    this.OnstartDateChanging(value);
                    this.SendPropertyChanging();
                    this._startDate = value;
                    this.SendPropertyChanged("startDate");
                    this.OnstartDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_dueDate", DbType = "DateTime NOT NULL")]
        public System.DateTime dueDate
        {
            get
            {
                return this._dueDate;
            }
            set
            {
                if ((this._dueDate != value))
                {
                    this.OndueDateChanging(value);
                    this.SendPropertyChanging();
                    this._dueDate = value;
                    this.SendPropertyChanged("dueDate");
                    this.OndueDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_hoursForTasksWithHigherPriority", DbType = "Int")]
        public System.Nullable<int> hoursForTasksWithHigherPriority
        {
            get
            {
                return this._hoursForTasksWithHigherPriority;
            }
            set
            {
                if ((this._hoursForTasksWithHigherPriority != value))
                {
                    this.OnhoursForTasksWithHigherPriorityChanging(value);
                    this.SendPropertyChanging();
                    this._hoursForTasksWithHigherPriority = value;
                    this.SendPropertyChanged("hoursForTasksWithHigherPriority");
                    this.OnhoursForTasksWithHigherPriorityChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }


        public int id
        {
            get
            {
                return taskId;
            }
            set
            {
                _taskId = value;
            }
        }


        public int? developerAvailabilityPerDay
        {
            get
            {
                return _developerAvailabilityPerDay;
            }
            set
            {
                _developerAvailabilityPerDay = value;
            }
        }

        public int hoursSpentOnItem
        {
            get
            {
                return _hoursSpentOnTask;
            }
            set
            {
                throw new NotImplementedException();
            }
        }

        public int parent
        {
            get
            {
                return _project;
            }
            set
            {
                throw new NotImplementedException();
            }
        }

        public string itemName
        {
            get
            {
                return taskName;
            }
            set
            {
                throw new NotImplementedException();
            }
        }

        public string parentName
        {
            get
            {
                return _projectName;
            }
            set
            {
                _projectName = value;
            }
        }

        public int? hoursForItemsWithHigherPriority
        {
            get
            {
                return _hoursForItemsWithHigherPriority;
            }
            set
            {
                _hoursForItemsWithHigherPriority = value;
            }
        }
    }
}
#pragma warning restore 1591
