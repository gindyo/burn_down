//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BurnDown", "taskdeveloper", "task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BurnDown.Models.task), "developer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BurnDown.Models.developer), true)]
[assembly: EdmRelationshipAttribute("BurnDown", "taskagendaItem", "task", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BurnDown.Models.task), "agendaItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BurnDown.Models.agendaItem), true)]
[assembly: EdmRelationshipAttribute("BurnDown", "projecttask", "project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BurnDown.Models.project), "task", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BurnDown.Models.task), true)]
[assembly: EdmRelationshipAttribute("BurnDown", "developerproject", "developer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BurnDown.Models.developer), "project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BurnDown.Models.project), true)]

#endregion

namespace BurnDown.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DB : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DB object using the connection string found in the 'DB' section of the application configuration file.
        /// </summary>
        public DB() : base("name=DB", "DB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DB object.
        /// </summary>
        public DB(string connectionString) : base(connectionString, "DB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DB object.
        /// </summary>
        public DB(EntityConnection connection) : base(connection, "DB")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<agendaItem> agendaItems
        {
            get
            {
                if ((_agendaItems == null))
                {
                    _agendaItems = base.CreateObjectSet<agendaItem>("agendaItems");
                }
                return _agendaItems;
            }
        }
        private ObjectSet<agendaItem> _agendaItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<developer> developers
        {
            get
            {
                if ((_developers == null))
                {
                    _developers = base.CreateObjectSet<developer>("developers");
                }
                return _developers;
            }
        }
        private ObjectSet<developer> _developers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<project> projects
        {
            get
            {
                if ((_projects == null))
                {
                    _projects = base.CreateObjectSet<project>("projects");
                }
                return _projects;
            }
        }
        private ObjectSet<project> _projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<task> tasks
        {
            get
            {
                if ((_tasks == null))
                {
                    _tasks = base.CreateObjectSet<task>("tasks");
                }
                return _tasks;
            }
        }
        private ObjectSet<task> _tasks;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the agendaItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToagendaItems(agendaItem agendaItem)
        {
            base.AddObject("agendaItems", agendaItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the developers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodevelopers(developer developer)
        {
            base.AddObject("developers", developer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToprojects(project project)
        {
            base.AddObject("projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tasks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotasks(task task)
        {
            base.AddObject("tasks", task);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BurnDown", Name="agendaItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class agendaItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new agendaItem object.
        /// </summary>
        /// <param name="agendaItemId">Initial value of the agendaItemId property.</param>
        /// <param name="agendaItemName">Initial value of the agendaItemName property.</param>
        /// <param name="completed">Initial value of the completed property.</param>
        /// <param name="task_taskId">Initial value of the task_taskId property.</param>
        public static agendaItem CreateagendaItem(global::System.Int32 agendaItemId, global::System.String agendaItemName, global::System.Boolean completed, global::System.Int32 task_taskId)
        {
            agendaItem agendaItem = new agendaItem();
            agendaItem.agendaItemId = agendaItemId;
            agendaItem.agendaItemName = agendaItemName;
            agendaItem.completed = completed;
            agendaItem.task_taskId = task_taskId;
            return agendaItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 agendaItemId
        {
            get
            {
                return _agendaItemId;
            }
            set
            {
                if (_agendaItemId != value)
                {
                    OnagendaItemIdChanging(value);
                    ReportPropertyChanging("agendaItemId");
                    _agendaItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("agendaItemId");
                    OnagendaItemIdChanged();
                }
            }
        }
        private global::System.Int32 _agendaItemId;
        partial void OnagendaItemIdChanging(global::System.Int32 value);
        partial void OnagendaItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String agendaItemName
        {
            get
            {
                return _agendaItemName;
            }
            set
            {
                OnagendaItemNameChanging(value);
                ReportPropertyChanging("agendaItemName");
                _agendaItemName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("agendaItemName");
                OnagendaItemNameChanged();
            }
        }
        private global::System.String _agendaItemName;
        partial void OnagendaItemNameChanging(global::System.String value);
        partial void OnagendaItemNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean completed
        {
            get
            {
                return _completed;
            }
            set
            {
                OncompletedChanging(value);
                ReportPropertyChanging("completed");
                _completed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("completed");
                OncompletedChanged();
            }
        }
        private global::System.Boolean _completed;
        partial void OncompletedChanging(global::System.Boolean value);
        partial void OncompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String notes
        {
            get
            {
                return _notes;
            }
            set
            {
                OnnotesChanging(value);
                ReportPropertyChanging("notes");
                _notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("notes");
                OnnotesChanged();
            }
        }
        private global::System.String _notes;
        partial void OnnotesChanging(global::System.String value);
        partial void OnnotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 task_taskId
        {
            get
            {
                return _task_taskId;
            }
            set
            {
                Ontask_taskIdChanging(value);
                ReportPropertyChanging("task_taskId");
                _task_taskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("task_taskId");
                Ontask_taskIdChanged();
            }
        }
        private global::System.Int32 _task_taskId;
        partial void Ontask_taskIdChanging(global::System.Int32 value);
        partial void Ontask_taskIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BurnDown", "taskagendaItem", "task")]
        public task task
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<task>("BurnDown.taskagendaItem", "task").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<task>("BurnDown.taskagendaItem", "task").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<task> taskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<task>("BurnDown.taskagendaItem", "task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<task>("BurnDown.taskagendaItem", "task", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BurnDown", Name="developer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class developer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new developer object.
        /// </summary>
        /// <param name="developerId">Initial value of the developerId property.</param>
        /// <param name="firstName">Initial value of the firstName property.</param>
        public static developer Createdeveloper(global::System.Int32 developerId, global::System.String firstName)
        {
            developer developer = new developer();
            developer.developerId = developerId;
            developer.firstName = firstName;
            return developer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 developerId
        {
            get
            {
                return _developerId;
            }
            set
            {
                if (_developerId != value)
                {
                    OndeveloperIdChanging(value);
                    ReportPropertyChanging("developerId");
                    _developerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("developerId");
                    OndeveloperIdChanged();
                }
            }
        }
        private global::System.Int32 _developerId;
        partial void OndeveloperIdChanging(global::System.Int32 value);
        partial void OndeveloperIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String firstName
        {
            get
            {
                return _firstName;
            }
            set
            {
                OnfirstNameChanging(value);
                ReportPropertyChanging("firstName");
                _firstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("firstName");
                OnfirstNameChanged();
            }
        }
        private global::System.String _firstName;
        partial void OnfirstNameChanging(global::System.String value);
        partial void OnfirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String lastName
        {
            get
            {
                return _lastName;
            }
            set
            {
                OnlastNameChanging(value);
                ReportPropertyChanging("lastName");
                _lastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("lastName");
                OnlastNameChanged();
            }
        }
        private global::System.String _lastName;
        partial void OnlastNameChanging(global::System.String value);
        partial void OnlastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String phone
        {
            get
            {
                return _phone;
            }
            set
            {
                OnphoneChanging(value);
                ReportPropertyChanging("phone");
                _phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("phone");
                OnphoneChanged();
            }
        }
        private global::System.String _phone;
        partial void OnphoneChanging(global::System.String value);
        partial void OnphoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> hoursPerDayAvailable
        {
            get
            {
                return _hoursPerDayAvailable;
            }
            set
            {
                OnhoursPerDayAvailableChanging(value);
                ReportPropertyChanging("hoursPerDayAvailable");
                _hoursPerDayAvailable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("hoursPerDayAvailable");
                OnhoursPerDayAvailableChanged();
            }
        }
        private Nullable<global::System.Int32> _hoursPerDayAvailable;
        partial void OnhoursPerDayAvailableChanging(Nullable<global::System.Int32> value);
        partial void OnhoursPerDayAvailableChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BurnDown", "taskdeveloper", "task")]
        public EntityCollection<task> tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<task>("BurnDown.taskdeveloper", "task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<task>("BurnDown.taskdeveloper", "task", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BurnDown", "developerproject", "project")]
        public EntityCollection<project> projects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<project>("BurnDown.developerproject", "project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<project>("BurnDown.developerproject", "project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BurnDown", Name="project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new project object.
        /// </summary>
        /// <param name="projectId">Initial value of the projectId property.</param>
        /// <param name="projectName">Initial value of the projectName property.</param>
        /// <param name="priority">Initial value of the priority property.</param>
        /// <param name="leadDeveloper">Initial value of the leadDeveloper property.</param>
        public static project Createproject(global::System.Int32 projectId, global::System.String projectName, global::System.Int32 priority, global::System.Int32 leadDeveloper)
        {
            project project = new project();
            project.projectId = projectId;
            project.projectName = projectName;
            project.priority = priority;
            project.leadDeveloper = leadDeveloper;
            return project;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 projectId
        {
            get
            {
                return _projectId;
            }
            set
            {
                if (_projectId != value)
                {
                    OnprojectIdChanging(value);
                    ReportPropertyChanging("projectId");
                    _projectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("projectId");
                    OnprojectIdChanged();
                }
            }
        }
        private global::System.Int32 _projectId;
        partial void OnprojectIdChanging(global::System.Int32 value);
        partial void OnprojectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String projectName
        {
            get
            {
                return _projectName;
            }
            set
            {
                OnprojectNameChanging(value);
                ReportPropertyChanging("projectName");
                _projectName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("projectName");
                OnprojectNameChanged();
            }
        }
        private global::System.String _projectName;
        partial void OnprojectNameChanging(global::System.String value);
        partial void OnprojectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 priority
        {
            get
            {
                return _priority;
            }
            set
            {
                OnpriorityChanging(value);
                ReportPropertyChanging("priority");
                _priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("priority");
                OnpriorityChanged();
            }
        }
        private global::System.Int32 _priority;
        partial void OnpriorityChanging(global::System.Int32 value);
        partial void OnpriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 leadDeveloper
        {
            get
            {
                return _leadDeveloper;
            }
            set
            {
                OnleadDeveloperChanging(value);
                ReportPropertyChanging("leadDeveloper");
                _leadDeveloper = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("leadDeveloper");
                OnleadDeveloperChanged();
            }
        }
        private global::System.Int32 _leadDeveloper;
        partial void OnleadDeveloperChanging(global::System.Int32 value);
        partial void OnleadDeveloperChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BurnDown", "projecttask", "task")]
        public EntityCollection<task> tasks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<task>("BurnDown.projecttask", "task");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<task>("BurnDown.projecttask", "task", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BurnDown", "developerproject", "developer")]
        public developer developer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<developer>("BurnDown.developerproject", "developer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<developer>("BurnDown.developerproject", "developer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<developer> developerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<developer>("BurnDown.developerproject", "developer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<developer>("BurnDown.developerproject", "developer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BurnDown", Name="task")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class task : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new task object.
        /// </summary>
        /// <param name="taskId">Initial value of the taskId property.</param>
        /// <param name="originalEstimatedHours">Initial value of the originalEstimatedHours property.</param>
        /// <param name="hoursSpentOnTask">Initial value of the hoursSpentOnTask property.</param>
        /// <param name="priority">Initial value of the priority property.</param>
        /// <param name="taskName">Initial value of the taskName property.</param>
        /// <param name="startDate">Initial value of the startDate property.</param>
        /// <param name="dueDate">Initial value of the dueDate property.</param>
        /// <param name="developer_developerId">Initial value of the developer_developerId property.</param>
        /// <param name="project_projectId">Initial value of the project_projectId property.</param>
        public static task Createtask(global::System.Int32 taskId, global::System.Int32 originalEstimatedHours, global::System.Int32 hoursSpentOnTask, global::System.Int32 priority, global::System.String taskName, global::System.DateTime startDate, global::System.DateTime dueDate, global::System.Int32 developer_developerId, global::System.Int32 project_projectId)
        {
            task task = new task();
            task.taskId = taskId;
            task.originalEstimatedHours = originalEstimatedHours;
            task.hoursSpentOnTask = hoursSpentOnTask;
            task.priority = priority;
            task.taskName = taskName;
            task.startDate = startDate;
            task.dueDate = dueDate;
            task.developer_developerId = developer_developerId;
            task.project_projectId = project_projectId;
            return task;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 taskId
        {
            get
            {
                return _taskId;
            }
            set
            {
                if (_taskId != value)
                {
                    OntaskIdChanging(value);
                    ReportPropertyChanging("taskId");
                    _taskId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("taskId");
                    OntaskIdChanged();
                }
            }
        }
        private global::System.Int32 _taskId;
        partial void OntaskIdChanging(global::System.Int32 value);
        partial void OntaskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 originalEstimatedHours
        {
            get
            {
                return _originalEstimatedHours;
            }
            set
            {
                OnoriginalEstimatedHoursChanging(value);
                ReportPropertyChanging("originalEstimatedHours");
                _originalEstimatedHours = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("originalEstimatedHours");
                OnoriginalEstimatedHoursChanged();
            }
        }
        private global::System.Int32 _originalEstimatedHours;
        partial void OnoriginalEstimatedHoursChanging(global::System.Int32 value);
        partial void OnoriginalEstimatedHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 hoursSpentOnTask
        {
            get
            {
                return _hoursSpentOnTask;
            }
            set
            {
                OnhoursSpentOnTaskChanging(value);
                ReportPropertyChanging("hoursSpentOnTask");
                _hoursSpentOnTask = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("hoursSpentOnTask");
                OnhoursSpentOnTaskChanged();
            }
        }
        private global::System.Int32 _hoursSpentOnTask;
        partial void OnhoursSpentOnTaskChanging(global::System.Int32 value);
        partial void OnhoursSpentOnTaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> shareOfProject
        {
            get
            {
                return _shareOfProject;
            }
            set
            {
                OnshareOfProjectChanging(value);
                ReportPropertyChanging("shareOfProject");
                _shareOfProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("shareOfProject");
                OnshareOfProjectChanged();
            }
        }
        private Nullable<global::System.Int32> _shareOfProject;
        partial void OnshareOfProjectChanging(Nullable<global::System.Int32> value);
        partial void OnshareOfProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> percentCompleted
        {
            get
            {
                return _percentCompleted;
            }
            set
            {
                OnpercentCompletedChanging(value);
                ReportPropertyChanging("percentCompleted");
                _percentCompleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("percentCompleted");
                OnpercentCompletedChanged();
            }
        }
        private Nullable<global::System.Int32> _percentCompleted;
        partial void OnpercentCompletedChanging(Nullable<global::System.Int32> value);
        partial void OnpercentCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 priority
        {
            get
            {
                return _priority;
            }
            set
            {
                OnpriorityChanging(value);
                ReportPropertyChanging("priority");
                _priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("priority");
                OnpriorityChanged();
            }
        }
        private global::System.Int32 _priority;
        partial void OnpriorityChanging(global::System.Int32 value);
        partial void OnpriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String taskName
        {
            get
            {
                return _taskName;
            }
            set
            {
                OntaskNameChanging(value);
                ReportPropertyChanging("taskName");
                _taskName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("taskName");
                OntaskNameChanged();
            }
        }
        private global::System.String _taskName;
        partial void OntaskNameChanging(global::System.String value);
        partial void OntaskNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime startDate
        {
            get
            {
                return _startDate;
            }
            set
            {
                OnstartDateChanging(value);
                ReportPropertyChanging("startDate");
                _startDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("startDate");
                OnstartDateChanged();
            }
        }
        private global::System.DateTime _startDate;
        partial void OnstartDateChanging(global::System.DateTime value);
        partial void OnstartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dueDate
        {
            get
            {
                return _dueDate;
            }
            set
            {
                OndueDateChanging(value);
                ReportPropertyChanging("dueDate");
                _dueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dueDate");
                OndueDateChanged();
            }
        }
        private global::System.DateTime _dueDate;
        partial void OndueDateChanging(global::System.DateTime value);
        partial void OndueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> hoursForTasksWithHigherPriority
        {
            get
            {
                return _hoursForTasksWithHigherPriority;
            }
            set
            {
                OnhoursForTasksWithHigherPriorityChanging(value);
                ReportPropertyChanging("hoursForTasksWithHigherPriority");
                _hoursForTasksWithHigherPriority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("hoursForTasksWithHigherPriority");
                OnhoursForTasksWithHigherPriorityChanged();
            }
        }
        private Nullable<global::System.Int32> _hoursForTasksWithHigherPriority;
        partial void OnhoursForTasksWithHigherPriorityChanging(Nullable<global::System.Int32> value);
        partial void OnhoursForTasksWithHigherPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String notes
        {
            get
            {
                return _notes;
            }
            set
            {
                OnnotesChanging(value);
                ReportPropertyChanging("notes");
                _notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("notes");
                OnnotesChanged();
            }
        }
        private global::System.String _notes;
        partial void OnnotesChanging(global::System.String value);
        partial void OnnotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 developer_developerId
        {
            get
            {
                return _developer_developerId;
            }
            set
            {
                Ondeveloper_developerIdChanging(value);
                ReportPropertyChanging("developer_developerId");
                _developer_developerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("developer_developerId");
                Ondeveloper_developerIdChanged();
            }
        }
        private global::System.Int32 _developer_developerId;
        partial void Ondeveloper_developerIdChanging(global::System.Int32 value);
        partial void Ondeveloper_developerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 project_projectId
        {
            get
            {
                return _project_projectId;
            }
            set
            {
                Onproject_projectIdChanging(value);
                ReportPropertyChanging("project_projectId");
                _project_projectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("project_projectId");
                Onproject_projectIdChanged();
            }
        }
        private global::System.Int32 _project_projectId;
        partial void Onproject_projectIdChanging(global::System.Int32 value);
        partial void Onproject_projectIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BurnDown", "taskdeveloper", "developer")]
        public developer developer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<developer>("BurnDown.taskdeveloper", "developer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<developer>("BurnDown.taskdeveloper", "developer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<developer> developerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<developer>("BurnDown.taskdeveloper", "developer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<developer>("BurnDown.taskdeveloper", "developer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BurnDown", "taskagendaItem", "agendaItem")]
        public EntityCollection<agendaItem> agendaItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<agendaItem>("BurnDown.taskagendaItem", "agendaItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<agendaItem>("BurnDown.taskagendaItem", "agendaItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BurnDown", "projecttask", "project")]
        public project project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<project>("BurnDown.projecttask", "project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<project>("BurnDown.projecttask", "project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<project> projectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<project>("BurnDown.projecttask", "project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<project>("BurnDown.projecttask", "project", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
